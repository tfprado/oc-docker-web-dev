# OctoberCMS server Config
server {
    listen 80;
    listen [::]:80;

    index index.php index.html;
    server_name localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/html/octobercms;

    # Stuff for OctoberCMS
    if (!-e $request_filename)
    {
        rewrite ^/(.*)$ /index.php?/$1 break;
        break;
    }
    rewrite ^themes/.*/(layouts|pages|partials)/.*.htm /index.php break;
    rewrite ^uploads/protected/.* /index.php break; #old file location support
    rewrite ^config/.* /index.php break;
    rewrite ^vendor/.* /index.php break;
    rewrite ^storage/cms/.* /index.php break;
    rewrite ^storage/logs/.* /index.php break;
    rewrite ^storage/framework/.* /index.php break;
    rewrite ^storage/temp/protected/.* /index.php break;
    rewrite ^storage/app/uploads/protected/.* /index.php break;
    #end octobercms stuff#

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        #
        # CORS header support
        #
        # One way to use this is by placing it into a file called "cors_support"
        # under your Nginx configuration directory and placing the following
        # statement inside your **location** block(s):
        #
        #   include cors_support;
        #
        # As of Nginx 1.7.5, add_header supports an "always" parameter which
        # allows CORS to work if the backend returns 4xx or 5xx status code.
        #
        # For more information on CORS, please see: http://enable-cors.org/
        # Forked from this Gist: https://gist.github.com/michiel/1064640
        #

        # set $cors '';
        # if ($http_origin ~ '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)') {
        #         set $cors 'true';
        # }

        # if ($cors = 'true') {
        #         add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        #         add_header 'Access-Control-Allow-Credentials' 'true' always;
        #         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #         add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        #         # required to be able to read Authorization header in frontend
        #         #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        # }

        # if ($request_method = 'OPTIONS') {
        #         # Tell client that this pre-flight info is valid for 20 days
        #         add_header 'Access-Control-Max-Age' 1728000;
        #         add_header 'Content-Type' 'text/plain charset=UTF-8';
        #         add_header 'Content-Length' 0;
        #         return 204;
        # }
    }
}
# End of OctoberCMS config

# Laravel App Server Config
server {
    listen 81;
    listen [::]:81;


    root /var/www/html/api/public;
    index index.php index.html index.htm index.nginx-debian.html;

    server_name localhost;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

}